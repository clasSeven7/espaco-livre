import { NextFunction, Request, Response } from 'express';

export async function validateCliente(
  request: Request,
  response: Response,
  next: NextFunction
) {
  const clienteData = request.body as any;

  // Valida√ß√µes b√°sicas
  if (!clienteData.email || !clienteData.senha || !clienteData.nome_usuario) {
    return response.status(400).json({
      error: '‚ùå Campos obrigat√≥rios n√£o preenchidos',
      field: !clienteData.email
        ? 'email'
        : !clienteData.senha
        ? 'senha'
        : 'nome_usuario',
    });
  }

  // Valida√ß√£o de email
  const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
  if (!emailRegex.test(clienteData.email)) {
    return response.status(400).json({
      error: 'üìß Email inv√°lido',
      field: 'email',
    });
  }

  // Valida√ß√£o de senha
  if (clienteData.senha.length < 6) {
    return response.status(400).json({
      error: 'üîí A senha deve ter no m√≠nimo 6 caracteres',
      field: 'senha',
    });
  }

  // Valida√ß√£o de idade
  if (!clienteData.idade || clienteData.idade < 18) {
    return response.status(400).json({
      error: '‚ö†Ô∏è √â necess√°rio ter 18 anos ou mais para se cadastrar',
      field: 'idade',
    });
  }

  // Formata√ß√£o de dados
  if (clienteData.cep) {
    clienteData.cep = clienteData.cep.replace(/\D/g, '');
  }

  if (clienteData.telefone) {
    clienteData.telefone = clienteData.telefone.replace(/\D/g, '');
  }

  // Adiciona os dados formatados ao request
  request.body = clienteData;
  next();
}
